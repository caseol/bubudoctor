<%= form_with(model: appointment, remote: true) do |form| %>
  <div class="container col-sm-12">
    <% if appointment.errors.any? %>
      <div id="error_explanation">
  <!--      <h2><%#= pluralize(appointment.errors.count, "error") %> prohibited this appointment from being saved:</h2>-->
        <ul>
        <% appointment.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
    <div class="row">
      <div class="col-sm-6">
        <div class="form-group">
          <%= form.label :appointment_kind %>
          <%= form.select(:appointment_kind, Appointment.appointment_kinds.keys.collect { |ak| [Appointment.human_enum_name(:appointment_kinds, ak), ak] }, {}, class: "form-control appointment-kind") %>
        </div>

        <div class="form-group">
          <%= form.label :patient_id %>
          <%= form.hidden_field :patient_id, value: "#{appointment.try(:patient).try(:id)}", class: "autocomplete-target" %>
          <%= text_field_tag :search_patient, (appointment.try(:patient).try(:name) || params[:search_patient]), data: { autocomplete: autocomplete_patient_all_patients_path, hidden:{target: ".autocomplete-target"} }, class: 'form-control' %>
        </div>

        <div class="form-group">
          <%= form.label "Telefone" %>
          <%= text_field_tag :patient_mobile, (appointment.try(:patient).try(:mobile)), class: 'form-control patient-mobile masked_mobile' %>
        </div>

        <div class="form-group">
          <%= form.label "Telefone" %>
          <%= select_tag(:patient_health_insurance, options_for_select(Patient::HEALTH_INSURANCE.to_h.values, appointment.try(:patient).try(:health_insurance)), prompt: "Selecione um ConvÃªnio", class: "form-control patient-health-insurance" ) %>
        </div>
      </div>

      <div class="col-sm-6">
        <div class="form-group">
          <%= form.label :appointment_date %>
          <div class="input-group date-time-picker" id="datepicker-appointment-date" data-target-input="nearest">
            <%= form.text_field :appointment_date, value:"#{appointment.try(:appointment_date).blank? ? Time.now().strftime('%d/%m/%Y %H:%M') : appointment.appointment_date.strftime('%d/%m/%Y %H:%M')}", class:'form-control datetimepicker-input', data:{target:'#datepicker-appointment-date'} %>
            <div class="input-group-append" data-target="#datepicker-appointment-date" data-toggle="datetimepicker">
              <div class="input-group-text"><%= icon('far', 'calendar-alt') %></div>
            </div>
          </div>
        </div>

        <div class="form-group">
          <%= form.label :status %>
          <%= form.select(:status, Appointment.status_kinds.keys.collect { |sk| [Appointment.human_enum_name(:status_kinds, sk), sk] }, {}, class: "form-control") %>
        </div>

        <div class="form-group">
          <%= form.label :obs %>
          <%= form.text_area :obs,size: "20x03", class: 'form-control' %>
        </div>
      </div>
    </div>

    <div class="actions col-12">
      <%= form.submit({class: 'btn btn-primary right'}) %>
    </div>
  </div>
<% end %>
